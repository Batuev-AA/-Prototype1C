
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	//ВладелецСчетаОрганизации       = Объект.Организация;
КонецПроцедуры

&НаСервере
функция ВернутьНазначениеИспользования(Наименование)
	
	если наименование = "Целевое" тогда
		возврат Справочники.Храм_НаправленияПрихода.Целевое;
	ИначеЕсли наименование = "Нецелевое" тогда
		возврат Справочники.Храм_НаправленияПрихода.Нецелевое;
	иначе
		Возврат Справочники.Храм_НаправленияПрихода.ПустаяСсылка();
	КонецЕсли;

КонецФункции
	
&НаСервере
функция ВернутьНаименованиеОрганизации(Организация)
	если ЗначениеЗаполнено(Организация) Тогда
		Возврат Организация.Наименование;
		
	иначе 
		возврат Неопределено
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ЦелевыеНецелевыеПрочие(Команда)
	
	
	Парам = Новый Структура; 
	Отбор = Новый Структура; 
	Отбор.Вставить("НаправлениеПрихода", ВернутьНазначениеИспользования("Целевое")); // то, по чему нужно искать
	Парам.Вставить("Отбор", Отбор); 
	Парам.Вставить("ДатаНачала", Объект.НачПериода); 
	Парам.Вставить("ДатаОкончания", КонецДня(Объект.КонПериода)); 
	 
	ф = ОткрытьФорму("РегистрСведений.Храм_КнигаУчета.ФормаСписка", Парам);

	
	//ф = ОткрытьФорму("Отчет.Храм_СводныеПроводки.ФормаОбъекта");
	//ф.отчет.НачалоПериода = Объект.НачПериода;
	//Если не ЗначениеЗаполнено(Объект.КонПериода) Тогда
	//	ф.отчет.КонецПериода = КонецГода(ТекущаяДата());
	//иначе
	//	ф.отчет.КонецПериода =  Объект.КонПериода;
	//КонецЕсли;
	//		
	//ф.отчет.Храм_НазначениеИспользования =  ВернутьНазначениеИспользования("Нецелевое");
	//
	//
	//ф.отчет.Организация = Объект.Организация;
	//
	//
	//Ключ = СтрЗаменить(Строка(ф.Отчет.ВключатьОбособленныеПодразделения) + ф.Отчет.Организация.УникальныйИдентификатор(), "-", "");
	//ф.ПолеОрганизация = Ключ;
	//
	//
	//
	//ф.отчет.ИспользоватьНазначениеИспользования = истина; 
	//
	//
	//ф.СформироватьОтчет("дыдыщь");
КонецПроцедуры

&НаКлиенте
Процедура СводныеПроводки(Команда)
	
	
	Парам = Новый Структура; 
	Отбор = Новый Структура; 
	Отбор.Вставить("НаправлениеПрихода", ВернутьНазначениеИспользования("Нецелевое")); // то, по чему нужно искать
	Парам.Вставить("Отбор", Отбор); 
	Парам.Вставить("ДатаНачала", Объект.НачПериода); 
	Парам.Вставить("ДатаОкончания", КонецДня(Объект.КонПериода)); 
	 
	ОткрытьФорму("РегистрСведений.Храм_КнигаУчета.ФормаСписка", Парам);

	



	//ф = ОткрытьФорму("Отчет.Храм_СводныеПроводки.ФормаОбъекта");
	//ф.отчет.НачалоПериода = Объект.НачПериода;
	//Если не ЗначениеЗаполнено(Объект.КонПериода) Тогда
	//	ф.отчет.КонецПериода = КонецГода(ТекущаяДата());
	//иначе
	//	ф.отчет.КонецПериода =  Объект.КонПериода;
	//КонецЕсли;
	//		
	//ф.отчет.Храм_НазначениеИспользования =  Объект.Храм_НазначениеИспользования;
	//
	//
	//ф.отчет.Организация = Объект.Организация;
	//
	//
	//Ключ = СтрЗаменить(Строка(ф.Отчет.ВключатьОбособленныеПодразделения) + ф.Отчет.Организация.УникальныйИдентификатор(), "-", "");
	//ф.ПолеОрганизация = Ключ;
	//
	//
	//ф.СформироватьОтчет("дыдыщь");

КонецПроцедуры

&НаКлиенте
Процедура ВсеПриходы(Команда)
		Парам = Новый Структура; 
	Парам.Вставить("ДатаНачала", Объект.НачПериода); 
	Парам.Вставить("ДатаОкончания", КонецДня(Объект.КонПериода)); 
	 
	ОткрытьФорму("РегистрСведений.Храм_КнигаУчета.ФормаСписка", Парам);

КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	ТабДокумент = печатьЕпархиальныйОтчет();
	
	ТабДокумент.Показать();

КонецПроцедуры

&НаСервере
Функция ПечатьЕпархиальныйОтчет() Экспорт
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	
	ОбъектыПечати = новый СписокЗначений;
	ОбъектыПечати.Добавить(Объект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_Храм_ЕпархиальныйОтчет_Храм_ЕпархиальныйОтчет";
	
	ОбщегоНазначения.УстановитьМинимальныеПоляПечати(ТабДокумент);
	
	Макет = ОбщегоНазначения.МакетПечатнойФормы("Документ.Храм_ЕпархиальныйОтчет.ПФ_MXL_Храм_ЕпархиальныйОтчет");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Храм_ЕпархиальныйОтчет.Ссылка КАК Ссылка,
	|	Храм_ЕпархиальныйОтчет.Дата КАК Дата,
	|	Храм_ЕпархиальныйОтчет.Организация КАК Организация,
	|	Храм_ЕпархиальныйОтчет.Номер КАК Номер,
	|	""Епархиальный отчет"" КАК СодержаниеОперации,
	|	Храм_ЕпархиальныйОтчет.ПериодОтчета КАК ПериодОтчета,
	|	Храм_ЕпархиальныйОтчет.НачПериода КАК НачПериода,
	|	Храм_ЕпархиальныйОтчет.КонПериода КАК КонПериода,
	|	Храм_ЕпархиальныйОтчет.Настоятель КАК Настоятель,
	|	Храм_ЕпархиальныйОтчет.ПредседательПриходскогоСовета КАК ПредседательПриходскогоСовета,
	|	Храм_ЕпархиальныйОтчет.Казначей КАК Казначей,
	|	Храм_ЕпархиальныйОтчет.ГодОткрытияПрихода КАК ГодОткрытияПрихода,
	|	Храм_ЕпархиальныйОтчет.РекомендованныйПроцентОтчислений КАК РекомендованныйПроцентОтчислений,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаИтого КАК ОстатокСредствНаНачалоПериодаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВКассе КАК ОстатокСредствНаНачалоПериодаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВБанке КАК ОстатокСредствНаНачалоПериодаВБанке,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаИтого КАК ОстатокСредствНаДатуОтчетаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВКассе КАК ОстатокСредствНаДатуОтчетаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВБанке КАК ОстатокСредствНаДатуОтчетаВБанке,
	|	Храм_ЕпархиальныйОтчет.ПоступленияПредыдущихЛет.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Год КАК Год,
	|		ОбщиеПоступления КАК ОбщиеПоступления,
	|		ЦелевыеПоступленияОтСпонсоров КАК ЦелевыеПоступленияОтСпонсоров,
	|		Итого КАК Итого
	|	) КАК ПоступленияПредыдущихЛет,
	|	Храм_ЕпархиальныйОтчет.ПоступленияЗаОтчетныйГод.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Период КАК Период,
	|		ОбщиеПоступления КАК ОбщиеПоступления,
	|		ЦелевыеПоступленияИСборы КАК ЦелевыеПоступленияИСборы,
	|		СубсидииЗаГаз КАК СубсидииЗаГаз,
	|		Итого КАК Итого
	|	) КАК ПоступленияЗаОтчетныйГод,
	|	Храм_ЕпархиальныйОтчет.ИзрасходованоЗаОтчетныйПериод.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ИзрасходованоИтого КАК ИзрасходованоИтого,
	|		ПеречисленоВЕпархиальноеУправлениеВзносы КАК ПеречисленоВЕпархиальноеУправлениеВзносы,
	|		НаОбщецерковныеНужды КАК НаОбщецерковныеНужды,
	|		НаДуховноеОбразование КАК НаДуховноеОбразование,
	|		ВРеставрационныйФонд КАК ВРеставрационныйФонд,
	|		ВБлаготворительныйФонд КАК ВБлаготворительныйФонд,
	|		Разделитель КАК Разделитель,
	|		НаСодержаниеПерсонала КАК НаСодержаниеПерсонала,
	|		НаРемонтИСодержаниеХрама КАК НаРемонтИСодержаниеХрама,
	|		ПриобретениеЦерковнойУтвари КАК ПриобретениеЦерковнойУтвари,
	|		ПриходскаяБлаготворительность КАК ПриходскаяБлаготворительность,
	|		ПрочиеРасходы КАК ПрочиеРасходы
	|	) КАК ИзрасходованоЗаОтчетныйПериод,
	|	Храм_ЕпархиальныйОтчет.ВОтчетномГодуСовершено.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		КрещенийДетейДо18лет КАК КрещенийДетейДо18лет,
	|		КрещенийВзрослых КАК КрещенийВзрослых,
	|		Венчаний КАК Венчаний,
	|		Отпеваний КАК Отпеваний,
	|		Богослужений КАК Богослужений
	|	) КАК ВОтчетномГодуСовершено,
	|	Храм_ЕпархиальныйОтчет.СведенияОПеречисленияхВзносов.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		НазваниеДокумента КАК НазваниеДокумента,
	|		НомерДокумента КАК НомерДокумента,
	|		ДатаДокумента КАК ДатаДокумента,
	|		СуммаДокумента КАК СуммаДокумента
	|	) КАК СведенияОПеречисленияхВзносов,
	|	Храм_ЕпархиальныйОтчет.ВзносВПечатнуюФормуИзРасходов КАК ВзносВПечатнуюФормуИзРасходов,
	|	Храм_ЕпархиальныйОтчет.РасчетнаяСуммаВзноса КАК РасчетнаяСуммаВзноса
	|ИЗ
	|	Документ.Храм_ЕпархиальныйОтчет КАК Храм_ЕпархиальныйОтчет
	|ГДЕ
	|	Храм_ЕпархиальныйОтчет.Ссылка В(&МассивОбъектов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		//ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		//СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ТелоОтчета    = Макет.ПолучитьОбласть("ТелоОтчета");
		Подвал  = Макет.ПолучитьОбласть("Подвал");
		
		ОборотШапка   = Макет.ПолучитьОбласть("ОборотШапка");
		ОборотЗаголовокТаблицы   = Макет.ПолучитьОбласть("ОборотЗаголовокТаблицы");
		ОборотСтрокиТаблицы   = Макет.ПолучитьОбласть("ОборотСтрокиТаблицы");
		ОборотИтоги   = Макет.ПолучитьОбласть("ОборотИтоги");

		
		
		
		// Выведем шапку документа.
		СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		
		СтруктураШапки = Новый Структура;
		СтруктураШапки.Вставить("Организация",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм, Телефоны"));
		СтруктураШапки.Вставить("АдресОрганизации",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес"));
		СтруктураШапки.Вставить("НомерДокумента", ОбщегоНазначения.НомерНаПечать(Выборка.Номер, Истина, Ложь));
		СтруктураШапки.Вставить("ДатаДокумента",  Формат(Выборка.Дата, "ДЛФ=D"));
		СтруктураШапки.Вставить("Содержание",     Выборка.СодержаниеОперации);
		СтруктураШапки.Вставить("ПериодОтчета",     ?(Выборка.ПериодОтчета = Перечисления.Храм_ПериодыЕпархиальногоОтчета.Год, "" + формат (Выборка.Дата,"ДФ=гггг") + " год", "" + Выборка.ПериодОтчета + " " + формат (Выборка.НачПериода,"ДФ=гггг") + " года"));
		
		
		РасчетныйСчет =  ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета");
		Для сч = 1 по 20 Цикл
			СтруктураШапки.Вставить("Р"+сч,  Сред(РасчетныйСчет,сч+4,1));
		КонецЦикла;
		
		ИНН =  ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ИНН");
		Для сч = 1 по 10 Цикл
			СтруктураШапки.Вставить("И"+сч,  Сред(ИНН,сч+4,1));
		КонецЦикла;
		
		БИК =  ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "БИК");
		Для сч = 1 по 9 Цикл
			СтруктураШапки.Вставить("Б"+сч,  Сред(БИК,сч+4,1));
		КонецЦикла;
		
		КоррСчет =  ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "КоррСчет");
		Для сч = 1 по 20 Цикл
			СтруктураШапки.Вставить("К"+сч,  Сред(КоррСчет,сч+4,1));
		КонецЦикла;
		
		//СтруктураШапки.Вставить("Банк",     СведенияОбОрганизации.Банк);
		
		ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
		ТабДокумент.Вывести(ШапкаДокумента);
		
		
		//////////////////////////
		
		СтруктураТела = Новый Структура;
		СтруктураТела.Вставить("ГодОткрытияПрихода", Выборка.ГодОткрытияПрихода);
		СтруктураТела.Вставить("РекомендованныйПроцентОтчислений", "" + Выборка.РекомендованныйПроцентОтчислений + "%");
		СтруктураТела.Вставить("НачПериода", Формат(Выборка.НачПериода,"ДЛФ=Д" ));
		СтруктураТела.Вставить("КонПериода", Формат(Выборка.КонПериода,"ДЛФ=Д" ));
		СтруктураТела.Вставить("ГодОтчета", формат (Выборка.НачПериода,"ДФ=гггг"));
		СтруктураТела.Вставить("ОстатокСредствНаНачалоПериодаИтого", Выборка.ОстатокСредствНаНачалоПериодаИтого);
		СтруктураТела.Вставить("ОстатокСредствНаНачалоПериодаВКассе", Выборка.ОстатокСредствНаНачалоПериодаВКассе);
		СтруктураТела.Вставить("ОстатокСредствНаНачалоПериодаВБанке", Выборка.ОстатокСредствНаНачалоПериодаВБанке);
		СтруктураТела.Вставить("ОстатокСредствНаДатуОтчетаИтого", Выборка.ОстатокСредствНаДатуОтчетаИтого);
		СтруктураТела.Вставить("ОстатокСредствНаДатуОтчетаВКассе", Выборка.ОстатокСредствНаДатуОтчетаВКассе);
		СтруктураТела.Вставить("ОстатокСредствНаДатуОтчетаВБанке", Выборка.ОстатокСредствНаДатуОтчетаВБанке);

		
		
		// Выведем заголовок таблицы.
		//ТабДокумент.Вывести(ЗаголовокТаблицы);
		СчИ = 1;
		// Выведем строки документа.
		ВыборкаППЛ = Выборка.ПоступленияПредыдущихЛет.Выбрать();
		Пока ВыборкаППЛ.Следующий() И СчИ <=5 Цикл
			
				
				СтруктураТела.Вставить("ППЛ" + "1" + счИ, ВыборкаППЛ.Год);
				СтруктураТела.Вставить("ППЛ" + "2" + счИ, ВыборкаППЛ.ОбщиеПоступления);
				СтруктураТела.Вставить("ППЛ" + "3" + счИ, ВыборкаППЛ.ЦелевыеПоступленияОтСпонсоров);
				СтруктураТела.Вставить("ППЛ" + "4" + счИ, ВыборкаППЛ.Итого);
			
				
			СчИ = СчИ+1;
		
			
		КонецЦикла;
		
		СчИ = 1;
		// Выведем строки документа.
		ВыборкаПОГ= Выборка.ПоступленияЗаОтчетныйГод.Выбрать();
		Пока ВыборкаПОГ.Следующий() И СчИ <=5 Цикл
			
			
			    НомерПериода = вернутьномерпериода(ВыборкаПОГ.Период);
			
				СтруктураТела.Вставить("ПОГ" + "1" + НомерПериода, ВыборкаПОГ.ОбщиеПоступления);
				СтруктураТела.Вставить("ПОГ" + "2" + НомерПериода, ВыборкаПОГ.ЦелевыеПоступленияИСборы);
				СтруктураТела.Вставить("ПОГ" + "3" + НомерПериода, ВыборкаПОГ.СубсидииЗаГаз);
				СтруктураТела.Вставить("ПОГ" + "4" + НомерПериода, ВыборкаПОГ.Итого);
			
				
			СчИ = СчИ+1;
		
			
		КонецЦикла;
		
			
			ВыборкаИОП= Выборка.ИзрасходованоЗаОтчетныйПериод.Выбрать();
			Если ВыборкаИОП.Следующий() Тогда
					
				если Выборка.ВзносВПечатнуюФормуИзРасходов Тогда
					СтруктураТела.Вставить("ИзрасходованоИтого", Выборка.РасчетнаяСуммаВзноса + ВыборкаИОП.НаСодержаниеПерсонала + ВыборкаИОП.НаРемонтИСодержаниеХрама + ВыборкаИОП.ПриобретениеЦерковнойУтвари + ВыборкаИОП.ПриходскаяБлаготворительность +  ВыборкаИОП.ПрочиеРасходы);
					СтруктураТела.Вставить("ПеречисленоВЕпархиальноеУправлениеВзносы", Выборка.РасчетнаяСуммаВзноса);
					СтруктураТела.Вставить("НаОбщецерковныеНужды", Выборка.РасчетнаяСуммаВзноса*10/25);
					СтруктураТела.Вставить("НаДуховноеОбразование", Выборка.РасчетнаяСуммаВзноса* 6/25);
					СтруктураТела.Вставить("ВРеставрационныйФонд", Выборка.РасчетнаяСуммаВзноса* 7/25);
					СтруктураТела.Вставить("ВБлаготворительныйФонд", Выборка.РасчетнаяСуммаВзноса* 2/25);
				Иначе
					СтруктураТела.Вставить("ИзрасходованоИтого", ВыборкаИОП.ИзрасходованоИтого);
					СтруктураТела.Вставить("ПеречисленоВЕпархиальноеУправлениеВзносы", ВыборкаИОП.ПеречисленоВЕпархиальноеУправлениеВзносы);
					СтруктураТела.Вставить("НаОбщецерковныеНужды", ВыборкаИОП.НаОбщецерковныеНужды);
					СтруктураТела.Вставить("НаДуховноеОбразование", ВыборкаИОП.НаДуховноеОбразование);
					СтруктураТела.Вставить("ВРеставрационныйФонд", ВыборкаИОП.ВРеставрационныйФонд);
					СтруктураТела.Вставить("ВБлаготворительныйФонд", ВыборкаИОП.ВБлаготворительныйФонд);
					
					
				КонецЕсли;
				
			//		СтруктураТела.Вставить("Разделитель", Выборка.Разделитель);
					СтруктураТела.Вставить("НаСодержаниеПерсонала", ВыборкаИОП.НаСодержаниеПерсонала);
					СтруктураТела.Вставить("НаРемонтИСодержаниеХрама", ВыборкаИОП.НаРемонтИСодержаниеХрама);
					СтруктураТела.Вставить("ПриобретениеЦерковнойУтвари", ВыборкаИОП.ПриобретениеЦерковнойУтвари);
					СтруктураТела.Вставить("ПриходскаяБлаготворительность", ВыборкаИОП.ПриходскаяБлаготворительность);
					СтруктураТела.Вставить("ПрочиеРасходы", ВыборкаИОП.ПрочиеРасходы);
			
			КонецЕсли;
		

		
		
		
		ВыборкаВОГС= Выборка.ВОтчетномГодуСовершено.Выбрать();
		Если ВыборкаВОГС.Следующий() Тогда
				СтруктураТела.Вставить("КрещенийДетейДо18лет", ВыборкаВОГС.КрещенийДетейДо18лет);
				СтруктураТела.Вставить("КрещенийВзрослых", ВыборкаВОГС.КрещенийВзрослых);
				СтруктураТела.Вставить("Венчаний", ВыборкаВОГС.Венчаний);
				СтруктураТела.Вставить("Отпеваний", ВыборкаВОГС.Отпеваний);
				СтруктураТела.Вставить("Богослужений", ВыборкаВОГС.Богослужений);
		
		КонецЕсли;

		ТелоОтчета.Параметры.Заполнить(СтруктураТела);
		ТабДокумент.Вывести(ТелоОтчета);

		//	
		//	СтрокаТаблицы.Параметры.Заполнить(Выборка);
		//	
		//	//АналитикаДт = ?(ЗначениеЗаполнено(Выборка.ПодразделениеДт), Строка(Выборка.ПодразделениеДт) + Символы.ПС, "")
		//	//	+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт1), Строка(Выборка.СубконтоДт1) + Символы.ПС, "")
		//	//	+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Строка(Выборка.СубконтоДт2) + Символы.ПС, "")
		//	//	+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт3), Строка(Выборка.СубконтоДт3), "");
		//	//
		//	//АналитикаКт = ?(ЗначениеЗаполнено(Выборка.ПодразделениеКт), Строка(Выборка.ПодразделениеКт) + Символы.ПС, "")
		//	//	+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт1), Строка(Выборка.СубконтоКт1) + Символы.ПС, "")
		//	//	+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт2), Строка(Выборка.СубконтоКт2) + Символы.ПС, "")
		//	//	+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт3), Строка(Выборка.СубконтоКт3), "");
		//	//	
		//	//СтруктураАналитики = Новый Структура("АналитикаДт,АналитикаКт", АналитикаДт, АналитикаКт);
		//	//СтрокаТаблицы.Параметры.Заполнить(СтруктураАналитики);
		//	
		//	// Проверим, помещается ли строка с подвалом.
		//	СтрокаСПодвалом = Новый Массив;
		//	СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		//	СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		//	СтрокаСПодвалом.Добавить(ПодвалДокумента);
		//	
		//	Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
		//		
		//		// Выведем подвал таблицы.
		//		ТабДокумент.Вывести(ПодвалТаблицы);
		//			
		//		// Выведем разрыв страницы.
		//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		//		// Выведем заголовок таблицы.
		//		ТабДокумент.Вывести(ЗаголовокТаблицы);
		//		
		//	КонецЕсли;
		//	
		//	ТабДокумент.Вывести(СтрокаТаблицы);
		//	
		//КонецЦикла;
		
		// Выведем подвал таблицы.
		//ТабДокумент.Вывести(ТелоОтчета);
		
		// Выведем подвал документа.
		СтруктураПодвала = Новый Структура;
		СтруктураПодвала.Вставить("Настоятель",  Выборка.Настоятель);
		СтруктураПодвала.Вставить("ПредседательПриходскогоСовета",    Выборка.ПредседательПриходскогоСовета);
		СтруктураПодвала.Вставить("Казначей",  Выборка.Казначей);
		
		Подвал.Параметры.Заполнить(СтруктураПодвала);
		
		ТабДокумент.Вывести(Подвал);
		
		
		// Выведем разрыв страницы.
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		
		ТабДокумент.Вывести(ОборотШапка);
		
		ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
		
		
		СтруктураОборотСтроки = Новый Структура;

		Итого = 0;
		ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
		Пока ВыборкаСОПВ.Следующий() Цикл
				СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
				СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
				СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
				СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
		        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
				ТабДокумент.Вывести(ОборотСтрокиТаблицы);
				Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	
		КонецЦикла;
		
		СтруктураОборотИтоги = Новый Структура;
		СтруктураОборотИтоги.Вставить("СуммаИтого", Итого);
		ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
		ТабДокумент.Вывести(ОборотИтоги);
				
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		ОбщегоНазначения.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

&НаКлиенте
Процедура ПоступленияПредыдущихЛетОбщиеПоступленияПриИзменении(Элемент)
	//ИмяТаблицы = "ПоступленияПредыдущихЛет";
	//Элементы = ЭтаФорма.Элементы;
	//Объект = ЭтаФорма.Объект;
	
	СтрокаТаблицы = ЭтаФорма.Элементы.ПоступленияПредыдущихЛет.ТекущиеДанные; //[ИмяТаблицы].ТекущиеДанные;
	СтрокаТаблицы.Итого =  СтрокаТаблицы.ОбщиеПоступления + СтрокаТаблицы.ЦелевыеПоступленияОтСпонсоров;
	

КонецПроцедуры

&НаКлиенте
Процедура ПоступленияЗаОтчетныйГодОбщиеПоступленияПриИзменении(Элемент)
	///	ИмяТаблицы = "ПоступленияЗаОтчетныйГод";
	//Элементы = ЭтаФорма.Элементы;
	//Объект = ЭтаФорма.Объект;
	
	СтрокаТаблицы = ЭтаФорма.Элементы.ПоступленияЗаОтчетныйГод.ТекущиеДанные; //[ИмяТаблицы].ТекущиеДанные;
	СтрокаТаблицы.Итого =  СтрокаТаблицы.ОбщиеПоступления + СтрокаТаблицы.ЦелевыеПоступленияИСборы + СтрокаТаблицы.СубсидииЗаГаз;

КонецПроцедуры

&НаКлиенте
Процедура ПоступленияЗаОтчетныйГодПериодПриИзменении(Элемент)
	
	СтрокаТаблицы = ЭтаФорма.Элементы.ПоступленияЗаОтчетныйГод.ТекущиеДанные; //[ИмяТаблицы].ТекущиеДанные;
	Если СтрокаТаблицы.Период = вернутьпериод(5) Тогда
		
		СтрокаТаблицы.ОбщиеПоступления = Объект.ПоступленияЗаОтчетныйГод.Итог("ОбщиеПоступления");
		СтрокаТаблицы.ЦелевыеПоступленияИСборы = Объект.ПоступленияЗаОтчетныйГод.Итог("ЦелевыеПоступленияИСборы");
		СтрокаТаблицы.СубсидииЗаГаз = Объект.ПоступленияЗаОтчетныйГод.Итог("СубсидииЗаГаз");
		СтрокаТаблицы.Итого = Объект.ПоступленияЗаОтчетныйГод.Итог("Итого");
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
функция вернутьпериод(номерпериода)
	если номерпериода = 1 тогда
		возврат  Перечисления.Храм_ПериодыЕпархиальногоОтчета.ПервыйКвартал;
	ИначеЕсли номерпериода = 2 тогда
		возврат  Перечисления.Храм_ПериодыЕпархиальногоОтчета.ВторойКвартал;
	ИначеЕсли номерпериода = 3 тогда
		возврат  Перечисления.Храм_ПериодыЕпархиальногоОтчета.ТретийКвартал;
	ИначеЕсли номерпериода = 4 тогда
		возврат  Перечисления.Храм_ПериодыЕпархиальногоОтчета.ЧетвертыйКвартал;
	Иначе 
		возврат  Перечисления.Храм_ПериодыЕпархиальногоОтчета.Год;
	КонецЕсли;
		
КонецФункции

&НаСервере
функция вернутьномерпериода(период)
	если период = Перечисления.Храм_ПериодыЕпархиальногоОтчета.ПервыйКвартал тогда
		возврат  1;
	ИначеЕсли период = Перечисления.Храм_ПериодыЕпархиальногоОтчета.ВторойКвартал тогда
		возврат  2;
	ИначеЕсли период = Перечисления.Храм_ПериодыЕпархиальногоОтчета.ТретийКвартал тогда
		возврат  3;
	ИначеЕсли период = Перечисления.Храм_ПериодыЕпархиальногоОтчета.ЧетвертыйКвартал тогда
		возврат  4;
	Иначе  
		возврат  5;
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ЗаполнитьПоДаннымБухучетаНаСервере()
	
	СчетКассы = ВнешниеИсточникиДанных.БухгалтерияПредприятия30.Таблицы.ПланСчетов.НайтиПоПолю("Код", "50.01");	

	СчетБанка = ВнешниеИсточникиДанных.БухгалтерияПредприятия30.Таблицы.ПланСчетов.НайтиПоПолю("Код", "51");
	
	Организация = ВнешниеИсточникиДанных.БухгалтерияПредприятия30.Таблицы.Организации.НайтиПоПолю("ИНН", Объект.Организация.ИНН);
	
	//НачалоПериодаКасса
	ЗапросОстатки = Новый Запрос;
	ЗапросОстатки.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Хозрасчетный_ИтогиПоСчетам.НачОстатокСумма КАК НачОстатокСумма,
	|	Хозрасчетный_ИтогиПоСчетам.ОборотСумма КАК ОборотСумма,
	|	Хозрасчетный_ИтогиПоСчетам.Счет КАК Счет,
	|	ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) КАК Период
	|ИЗ
	|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный_ИтогиПоСчетам КАК Хозрасчетный_ИтогиПоСчетам
	|ГДЕ
	|	Хозрасчетный_ИтогиПоСчетам.Счет = &Счет
	|	И Хозрасчетный_ИтогиПоСчетам.Организация = &Организация
	|	И ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) <= &НачПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	ЗапросОстатки.УстановитьПараметр("Счет", СчетКассы);
	ЗапросОстатки.УстановитьПараметр("Организация", Объект.Организация);
	ЗапросОстатки.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.НачПериода));
	
	РезультатОстатки = ЗапросОстатки.Выполнить();
	ВыборкаОстатки = РезультатОстатки.Выбрать();
	
	Если  ВыборкаОстатки.Следующий() Тогда
	    НачОстаток = ВыборкаОстатки.НачОстатокСумма;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Хозрасчетный.СчетДт КАК Счет,
			|	СУММА(Хозрасчетный.Сумма) КАК СуммаДТ,
			|	СУММА(0) КАК СуммаКТ
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетДт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетДт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Хозрасчетный.СчетКт,
			|	СУММА(0),
			|	СУММА(Хозрасчетный.Сумма)
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетКт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетКт";
	 
		Запрос.УстановитьПараметр("КонецПериода", Объект.НачПериода);
		Запрос.УстановитьПараметр("НачалоПериода", ВыборкаОстатки.Период);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("Счет", СчетКассы);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НачОстаток = НачОстаток + ВыборкаДетальныеЗаписи.СуммаДт - ВыборкаДетальныеЗаписи.СуммаКт; 
		КонецЦикла;	
		Объект.ОстатокСредствНаНачалоПериодаВКассе = НачОстаток;
	Иначе
		
		Объект.ОстатокСредствНаНачалоПериодаВКассе = 0;
	
	КонецЕсли;
	//НачалоПериодаКасса  конец

	//НачалоПериодаБанк	
	ЗапросОстатки = Новый Запрос;
	ЗапросОстатки.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Хозрасчетный_ИтогиПоСчетам.НачОстатокСумма КАК НачОстатокСумма,
	|	Хозрасчетный_ИтогиПоСчетам.ОборотСумма КАК ОборотСумма,
	|	Хозрасчетный_ИтогиПоСчетам.Счет КАК Счет,
	|	ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) КАК Период
	|ИЗ
	|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный_ИтогиПоСчетам КАК Хозрасчетный_ИтогиПоСчетам
	|ГДЕ
	|	Хозрасчетный_ИтогиПоСчетам.Счет = &Счет
	|	И Хозрасчетный_ИтогиПоСчетам.Организация = &Организация
	|	И ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) <= &НачПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	ЗапросОстатки.УстановитьПараметр("Счет", СчетБанка);
	ЗапросОстатки.УстановитьПараметр("Организация", Объект.Организация);
	ЗапросОстатки.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.НачПериода));
	
	РезультатОстатки = ЗапросОстатки.Выполнить();
	ВыборкаОстатки = РезультатОстатки.Выбрать();
	
	Если  ВыборкаОстатки.Следующий() Тогда
	    НачОстаток = ВыборкаОстатки.НачОстатокСумма;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Хозрасчетный.СчетДт КАК Счет,
			|	СУММА(Хозрасчетный.Сумма) КАК СуммаДТ,
			|	СУММА(0) КАК СуммаКТ
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетДт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетДт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Хозрасчетный.СчетКт,
			|	СУММА(0),
			|	СУММА(Хозрасчетный.Сумма)
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетКт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетКт";
	 
		Запрос.УстановитьПараметр("КонецПериода", Объект.НачПериода);
		Запрос.УстановитьПараметр("НачалоПериода", ВыборкаОстатки.Период);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("Счет", СчетБанка);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НачОстаток = НачОстаток + ВыборкаДетальныеЗаписи.СуммаДт - ВыборкаДетальныеЗаписи.СуммаКт; 
		КонецЦикла;	
		Объект.ОстатокСредствНаНачалоПериодаВБанке = НачОстаток;
	Иначе		
		Объект.ОстатокСредствНаНачалоПериодаВБанке = 0;
	КонецЕсли;
	//НачалоПериодаБанк Конец
	
	Объект.ОстатокСредствНаНачалоПериодаИтого = Объект.ОстатокСредствНаНачалоПериодаВБанке + Объект.ОстатокСредствНаНачалоПериодаВКассе;
	
	//КонецПериодаКасса
	ЗапросОстатки = Новый Запрос;
	ЗапросОстатки.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Хозрасчетный_ИтогиПоСчетам.НачОстатокСумма КАК НачОстатокСумма,
	|	Хозрасчетный_ИтогиПоСчетам.ОборотСумма КАК ОборотСумма,
	|	Хозрасчетный_ИтогиПоСчетам.Счет КАК Счет,
	|	ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) КАК Период
	|ИЗ
	|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный_ИтогиПоСчетам КАК Хозрасчетный_ИтогиПоСчетам
	|ГДЕ
	|	Хозрасчетный_ИтогиПоСчетам.Счет = &Счет
	|	И Хозрасчетный_ИтогиПоСчетам.Организация = &Организация
	|	И ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) <= &НачПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	ЗапросОстатки.УстановитьПараметр("Счет", СчетКассы);
	ЗапросОстатки.УстановитьПараметр("Организация", Объект.Организация);
	ЗапросОстатки.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.КонПериода));
	
	РезультатОстатки = ЗапросОстатки.Выполнить();
	ВыборкаОстатки = РезультатОстатки.Выбрать();
	
	Если  ВыборкаОстатки.Следующий() Тогда
	    НачОстаток = ВыборкаОстатки.НачОстатокСумма;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Хозрасчетный.СчетДт КАК Счет,
			|	СУММА(Хозрасчетный.Сумма) КАК СуммаДТ,
			|	СУММА(0) КАК СуммаКТ
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетДт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(&КонецПериода, День)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетДт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Хозрасчетный.СчетКт,
			|	СУММА(0),
			|	СУММА(Хозрасчетный.Сумма)
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетКт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(&КонецПериода, День)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетКт";
	 
		Запрос.УстановитьПараметр("КонецПериода", Объект.КонПериода);
		Запрос.УстановитьПараметр("НачалоПериода", ВыборкаОстатки.Период);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("Счет", СчетКассы);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НачОстаток = НачОстаток + ВыборкаДетальныеЗаписи.СуммаДт - ВыборкаДетальныеЗаписи.СуммаКт; 
		КонецЦикла;	
		Объект.ОстатокСредствНаДатуОтчетаВКассе = НачОстаток;
	Иначе
		
		Объект.ОстатокСредствНаНачалоПериодаВКассе = 0;
	
	КонецЕсли;
	//КонецПериодаКасса  конец

	//КонецПериодаБанк	
	ЗапросОстатки = Новый Запрос;
	ЗапросОстатки.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Хозрасчетный_ИтогиПоСчетам.НачОстатокСумма КАК НачОстатокСумма,
	|	Хозрасчетный_ИтогиПоСчетам.ОборотСумма КАК ОборотСумма,
	|	Хозрасчетный_ИтогиПоСчетам.Счет КАК Счет,
	|	ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) КАК Период
	|ИЗ
	|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный_ИтогиПоСчетам КАК Хозрасчетный_ИтогиПоСчетам
	|ГДЕ
	|	Хозрасчетный_ИтогиПоСчетам.Счет = &Счет
	|	И Хозрасчетный_ИтогиПоСчетам.Организация = &Организация
	|	И ДОБАВИТЬКДАТЕ(Хозрасчетный_ИтогиПоСчетам.Период, ГОД, -2000) <= &НачПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	ЗапросОстатки.УстановитьПараметр("Счет", СчетБанка);
	ЗапросОстатки.УстановитьПараметр("Организация", Объект.Организация);
	ЗапросОстатки.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.КонПериода));
	
	РезультатОстатки = ЗапросОстатки.Выполнить();
	ВыборкаОстатки = РезультатОстатки.Выбрать();
	
	Если  ВыборкаОстатки.Следующий() Тогда
	    НачОстаток = ВыборкаОстатки.НачОстатокСумма;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Хозрасчетный.СчетДт КАК Счет,
			|	СУММА(Хозрасчетный.Сумма) КАК СуммаДТ,
			|	СУММА(0) КАК СуммаКТ
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетДт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(&КонецПериода, День)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетДт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Хозрасчетный.СчетКт,
			|	СУММА(0),
			|	СУММА(Хозрасчетный.Сумма)
			|ИЗ
			|	ВнешнийИсточникДанных.БухгалтерияПредприятия30.Таблица.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	Хозрасчетный.СчетКт = &Счет
			|	И Хозрасчетный.Организация = &Организация
			|	И ДОБАВИТЬКДАТЕ(Хозрасчетный.Период, ГОД, -2000) МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(&КонецПериода, День)
			|
			|СГРУППИРОВАТЬ ПО
			|	Хозрасчетный.СчетКт";
	 
		Запрос.УстановитьПараметр("КонецПериода", Объект.КонПЕриода);
		Запрос.УстановитьПараметр("НачалоПериода", ВыборкаОстатки.Период);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("Счет", СчетБанка);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НачОстаток = НачОстаток + ВыборкаДетальныеЗаписи.СуммаДт - ВыборкаДетальныеЗаписи.СуммаКт; 
		КонецЦикла;	
		Объект.ОстатокСредствНаДатуОтчетаВБанке = НачОстаток;
	Иначе		
		Объект.ОстатокСредствНаДатуОтчетаВБанке = 0;
	КонецЕсли;
	//НачалоПериодаБанк Конец

	Объект.ОстатокСредствНаДатуОтчетаИтого =  Объект.ОстатокСредствНаДатуОтчетаВБанке + Объект.ОстатокСредствНаДатуОтчетаВКассе;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДаннымБухучета(Команда)
	ЗаполнитьПоДаннымБухучетаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоступленияНаСервере()
	
	
	НовСтр = Объект.ПоступленияЗаОтчетныйГод.Добавить();
	НовСтр.Период = Объект.ПериодОтчета;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Храм_КнигаУчета.НаправлениеПрихода КАК НаправлениеПрихода,
	               |	СУММА(Храм_КнигаУчета.СуммаПриход) КАК Сумма
	               |ИЗ
	               |	РегистрСведений.Храм_КнигаУчета КАК Храм_КнигаУчета
	               |ГДЕ
	               |	Храм_КнигаУчета.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ)
	               |	И Храм_КнигаУчета.СуммаПриход <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Храм_КнигаУчета.НаправлениеПрихода";
	
	Запрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Неуказанные = 0;
	
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.НаправлениеПрихода = Справочники.Храм_НаправленияПрихода.Нецелевое Тогда
			НовСтр.ОбщиеПоступления = Выборка.Сумма;
		ИначеЕсли  Выборка.НаправлениеПрихода = Справочники.Храм_НаправленияПрихода.Целевое Тогда 
			НовСтр.ЦелевыеПоступленияИСборы = Выборка.Сумма;
			
		Иначе Неуказанные = Неуказанные + Выборка.Сумма;
		КонецЕсли;	
	
	КонецЦикла;
	НовСтр.Неуказанные =  Неуказанные;
	НовСтр.Итого =   НовСтр.ОбщиеПоступления +  НовСтр.ЦелевыеПоступленияИСборы + НовСтр.Неуказанные;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоступления(Команда)
	ЗаполнитьПоступленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьРасходыОтчетногоПериодаНаСервере()
	НовСтр = Объект.ИзрасходованоЗаОтчетныйПериод.Добавить();
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Храм_КнигаУчета.НаправлениеРасхода КАК НаправлениеРасхода,
	               |	СУММА(Храм_КнигаУчета.СуммаРасход) КАК Сумма
	               |ИЗ
	               |	РегистрСведений.Храм_КнигаУчета КАК Храм_КнигаУчета
	               |ГДЕ
	               |	Храм_КнигаУчета.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ)
	               |	И Храм_КнигаУчета.СуммаРасход <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Храм_КнигаУчета.НаправлениеРасхода";
	
	Запрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Неуказанные = 0;
	
	Пока Выборка.Следующий() Цикл
	

		Если Выборка.НаправлениеРасхода = Справочники.Храм_НаправленияРасхода.ПеречисленоВЕпархиальноеУправлениеВзносы Тогда
			НовСтр.ПеречисленоВЕпархиальноеУправлениеВзносы = Выборка.Сумма;
			НовСтр.НаОбщецерковныеНужды = 	Выборка.Сумма * 10/25;
			НовСтр.НаДуховноеОбразование = 	Выборка.Сумма * 6/25;
			НовСтр.ВРеставрационныйФонд = 	Выборка.Сумма * 7/25;
			НовСтр.ВБлаготворительныйФонд = Выборка.Сумма * 2/25;
			
			
		ИначеЕсли  Выборка.НаправлениеРасхода = Справочники.Храм_НаправленияРасхода.НаСодержаниеПерсонала Тогда 
			НовСтр.НаСодержаниеПерсонала = Выборка.Сумма;
		ИначеЕсли  Выборка.НаправлениеРасхода = Справочники.Храм_НаправленияРасхода.НаРемонтИСодержаниеХрама Тогда 
			НовСтр.НаРемонтИСодержаниеХрама = Выборка.Сумма;
		ИначеЕсли  Выборка.НаправлениеРасхода = Справочники.Храм_НаправленияРасхода.ПриобретениеЦерковнойУтвари Тогда 
			НовСтр.ПриобретениеЦерковнойУтвари = Выборка.Сумма;
		ИначеЕсли  Выборка.НаправлениеРасхода = Справочники.Храм_НаправленияРасхода.ПриходскаяБлаготворительность Тогда 
			НовСтр.ПриходскаяБлаготворительность = Выборка.Сумма;
		ИначеЕсли  Выборка.НаправлениеРасхода = Справочники.Храм_НаправленияРасхода.ПрочиеРасходы Тогда 
			НовСтр.ПрочиеРасходы = Выборка.Сумма;
			
		Иначе Неуказанные = Неуказанные + Выборка.Сумма;

		КонецЕсли;	
	
	КонецЦикла;
	НовСтр.Неуказанные =  Неуказанные;
	
	НовСтр.ИзрасходованоИтого =   НовСтр.ПеречисленоВЕпархиальноеУправлениеВзносы
			//	+  НовСтр.НаОбщецерковныеНужды
			//	+  НовСтр.НаДуховноеОбразование
			//	+  НовСтр.ВРеставрационныйФонд
			//	+  НовСтр.ВБлаготворительныйФонд
				+  НовСтр.НаСодержаниеПерсонала
				+  НовСтр.НаРемонтИСодержаниеХрама
				+  НовСтр.ПриобретениеЦерковнойУтвари
				+  НовСтр.ПриходскаяБлаготворительность
				+  НовСтр.ПрочиеРасходы 	
				+  НовСтр.Неуказанные;
	//НовСтр.Итого =   НовСтр.ОбщиеПоступления +  НовСтр.ЦелевыеПоступленияИСборы + НовСтр.Неуказанные;

КонецПроцедуры

&НаКлиенте
Процедура ИзрасходованоЗаОтчетныйПериодПеречисленоВЕпархиальноеУправлениеВзносыПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	СтрокаТаблицы = ЭтаФорма.Элементы.ИзрасходованоЗаОтчетныйПериод.ТекущиеДанные; //[ИмяТаблицы].ТекущиеДанные;
	ИзрасходованоЗаОтчетныйПериодПересчитатьИтого();
			СтрокаТаблицы.НаОбщецерковныеНужды = 	СтрокаТаблицы.ПеречисленоВЕпархиальноеУправлениеВзносы * 10/25;
			СтрокаТаблицы.НаДуховноеОбразование = 	СтрокаТаблицы.ПеречисленоВЕпархиальноеУправлениеВзносы * 6/25;
			СтрокаТаблицы.ВРеставрационныйФонд = 	СтрокаТаблицы.ПеречисленоВЕпархиальноеУправлениеВзносы * 7/25;
			СтрокаТаблицы.ВБлаготворительныйФонд =  СтрокаТаблицы.ПеречисленоВЕпархиальноеУправлениеВзносы * 2/25;
КонецПроцедуры

&НаКлиенте
Процедура ИзрасходованоЗаОтчетныйПериодПересчитатьИтого()

	СтрокаТаблицы = ЭтаФорма.Элементы.ИзрасходованоЗаОтчетныйПериод.ТекущиеДанные; //[ИмяТаблицы].ТекущиеДанные;
	СтрокаТаблицы.ИзрасходованоИтого =  СтрокаТаблицы.ПеречисленоВЕпархиальноеУправлениеВзносы
				+  СтрокаТаблицы.НаСодержаниеПерсонала
				+  СтрокаТаблицы.НаРемонтИСодержаниеХрама
				+  СтрокаТаблицы.ПриобретениеЦерковнойУтвари
				+  СтрокаТаблицы.ПриходскаяБлаготворительность
				+  СтрокаТаблицы.ПрочиеРасходы 	
				+  СтрокаТаблицы.Неуказанные;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРасходыОтчетногоПериода(Команда)
	ДобавитьРасходыОтчетногоПериодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура РассчитатьВзносНаСервере()
	
	если Объект.СчитатьВзносПоТаблицеПоступлений Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Период", Объект.ПериодОтчета); 

		МассивСтрок = Объект.ПоступленияЗаОтчетныйГод.НайтиСтроки(ПараметрыОтбора);
		
		СуммаПрихода = 0;
		
		для Каждого ТекСтрока из МассивСтрок Цикл
			СуммаПрихода = СуммаПрихода + ТекСтрока.ОбщиеПоступления + ТекСтрока.СубсидииЗаГаз + ТекСтрока.Неуказанные;
		КонецЦикла;
		
	иначе
		
		СуммаПрихода = 0;
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЕСТЬNULL(СУММА(Храм_КнигаУчета.СуммаПриход), 0) КАК Сумма
		               |ИЗ
		               |	РегистрСведений.Храм_КнигаУчета КАК Храм_КнигаУчета
		               |ГДЕ
		               |	Храм_КнигаУчета.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ)
		               |	И Храм_КнигаУчета.СуммаПриход <> 0
		               |	И Храм_КнигаУчета.НаправлениеПрихода <> &НаправлениеПриходаЦелевое";
		
		Запрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
		Запрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
		Запрос.УстановитьПараметр("НаправлениеПриходаЦелевое", Справочники.Храм_НаправленияПрихода.Целевое);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		
		Если Выборка.Следующий() Тогда
		
			СуммаПрихода =  Выборка.Сумма;
		
		КонецЕсли;
	КонецЕсли;
		Если Объект.ВзносВСумме Тогда
			Объект.РасчетнаяСуммаВзноса = СуммаПрихода *  Объект.РекомендованныйПроцентОтчислений / 100;
		иначе
			Объект.РасчетнаяСуммаВзноса = СуммаПрихода *  Объект.РекомендованныйПроцентОтчислений / (100-Объект.РекомендованныйПроцентОтчислений) ;
		КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьВзнос(Команда)
	РассчитатьВзносНаСервере();
КонецПроцедуры

&НаСервере
Функция ПечатьКнигаУчетаЦелевыхНаСервере()
МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	
	ОбъектыПечати = новый СписокЗначений;
	ОбъектыПечати.Добавить(Объект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_Храм_ЕпархиальныйОтчет_Храм_КнигаУчетаЦелевыхПоступлений";
	
	ОбщегоНазначения.УстановитьМинимальныеПоляПечати(ТабДокумент);
	
	Макет = ОбщегоНазначения.МакетПечатнойФормы("Документ.Храм_ЕпархиальныйОтчет.ПФ_MXL_Храм_КнигаУчетаЦелевыхПоступлений");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Храм_ЕпархиальныйОтчет.Ссылка КАК Ссылка,
	|	Храм_ЕпархиальныйОтчет.Дата КАК Дата,
	|	Храм_ЕпархиальныйОтчет.Организация КАК Организация,
	|	Храм_ЕпархиальныйОтчет.Номер КАК Номер,
	|	""Епархиальный отчет"" КАК СодержаниеОперации,
	|	Храм_ЕпархиальныйОтчет.ПериодОтчета КАК ПериодОтчета,
	|	Храм_ЕпархиальныйОтчет.НачПериода КАК НачПериода,
	|	Храм_ЕпархиальныйОтчет.КонПериода КАК КонПериода,
	|	Храм_ЕпархиальныйОтчет.Настоятель КАК Настоятель,
	|	Храм_ЕпархиальныйОтчет.ПредседательПриходскогоСовета КАК ПредседательПриходскогоСовета,
	|	Храм_ЕпархиальныйОтчет.Казначей КАК Казначей,
	|	Храм_ЕпархиальныйОтчет.ГодОткрытияПрихода КАК ГодОткрытияПрихода,
	|	Храм_ЕпархиальныйОтчет.РекомендованныйПроцентОтчислений КАК РекомендованныйПроцентОтчислений,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаИтого КАК ОстатокСредствНаНачалоПериодаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВКассе КАК ОстатокСредствНаНачалоПериодаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВБанке КАК ОстатокСредствНаНачалоПериодаВБанке,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаИтого КАК ОстатокСредствНаДатуОтчетаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВКассе КАК ОстатокСредствНаДатуОтчетаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВБанке КАК ОстатокСредствНаДатуОтчетаВБанке,
	|	Храм_ЕпархиальныйОтчет.ВзносВПечатнуюФормуИзРасходов КАК ВзносВПечатнуюФормуИзРасходов,
	|	Храм_ЕпархиальныйОтчет.РасчетнаяСуммаВзноса КАК РасчетнаяСуммаВзноса
	|ИЗ
	|	Документ.Храм_ЕпархиальныйОтчет КАК Храм_ЕпархиальныйОтчет
	|ГДЕ
	|	Храм_ЕпархиальныйОтчет.Ссылка В(&МассивОбъектов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		//ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		//СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		//ТелоОтчета    = Макет.ПолучитьОбласть("ТелоОтчета");
		Подвал  = Макет.ПолучитьОбласть("Подвал");
		
		//ОборотШапка   = Макет.ПолучитьОбласть("ОборотШапка");
		ОборотЗаголовокТаблицы   = Макет.ПолучитьОбласть("ОборотЗаголовокТаблицы");
		ОборотСтрокиТаблицы   = Макет.ПолучитьОбласть("ОборотСтрокиТаблицы");
		ОборотИтоги   = Макет.ПолучитьОбласть("ОборотИтоги");

		
		
		
		// Выведем шапку документа.
		СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		
		СтруктураШапки = Новый Структура;
		СтруктураШапки.Вставить("Организация",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм"));
		СтруктураШапки.Вставить("АдресОрганизации",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес"));
		СтруктураШапки.Вставить("НомерДокумента", ОбщегоНазначения.НомерНаПечать(Выборка.Номер, Истина, Ложь));
		СтруктураШапки.Вставить("ДатаДокумента",  Формат(Выборка.Дата, "ДЛФ=ДД"));
		СтруктураШапки.Вставить("Содержание",     Выборка.СодержаниеОперации);
		СтруктураШапки.Вставить("ПериодОтчета",     ?(Выборка.ПериодОтчета = Перечисления.Храм_ПериодыЕпархиальногоОтчета.Год, "" + формат (Выборка.Дата,"ДФ=гггг") + " год", "" + Выборка.ПериодОтчета + " " + формат (Выборка.НачПериода,"ДФ=гггг") + " года"));
		
		
		СтруктураШапки.Вставить("НачПериода", Формат(Выборка.НачПериода,"ДЛФ=ДД" ));
		СтруктураШапки.Вставить("КонПериода", Формат(Выборка.КонПериода,"ДЛФ=ДД" ));
		
		
		
		
				
	СчетЦелевых = ПланыСчетов.Хозрасчетный.НайтиПоКоду("86.02.1");
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), Счет = &Счет, , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Счет", СчетЦелевых);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Выборка.НачПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	ОстатокНаНачало = 0;
	Если  Выборка1.Следующий() Тогда
	    ОстатокНаНачало =   Выборка1.СуммаОстаток;
		
	КонецЕсли;

		СтруктураШапки.Вставить("ОстатокСредствНаНачалоПериодаИтого", формат(ОстатокНаНачало, "ЧЦ=10; ЧДЦ=2; ЧФ=""Ч руб."""));
		
		
		СтруктураШапки.Вставить("Казначей",  Выборка.Казначей);
		
		
		ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
		ТабДокумент.Вывести(ШапкаДокумента);
		
		
	///////////////////		
		ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
		
Запрос = Новый Запрос;               //Запрос такой хитрый потому что к одному документу надо выбрать одну проводку
Запрос.Текст = "ВЫБРАТЬ
               |	Храм_КнигаУчета.Период КАК Период,
               |	Храм_КнигаУчета.ДокументХозяйственнойОперации.Представление КАК ДокументХозяйственнойОперацииПредставление,
				|	Храм_КнигаУчета.ДокументХозяйственнойОперации КАК ДокументХозяйственнойОперации,
               |	Храм_КнигаУчета.СуммаПриход КАК СуммаПриход,
               |	Храм_КнигаУчета.СуммаРасход КАК СуммаРасход,
               |	ВЫБОР
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПлатежноеПоручение
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.СписаниеСРасчетногоСчета
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПриходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.РасходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ОперацияБух
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Содержание
               |	КОНЕЦ КАК Описание,
               |	МАКСИМУМ(Хозрасчетный.СчетДт) КАК СчетДт,
               |	МАКСИМУМ(Хозрасчетный.СчетКт) КАК СчетКт
               |ИЗ
               |	РегистрСведений.Храм_КнигаУчета КАК Храм_КнигаУчета
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
               |		ПО Храм_КнигаУчета.ДокументХозяйственнойОперации = Хозрасчетный.Регистратор
               |ГДЕ
               |	Храм_КнигаУчета.НаправлениеПрихода = &НаправлениеПрихода
               |	И Храм_КнигаУчета.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ)
               |	И (Хозрасчетный.СчетДт = &СчетКассы
               |			ИЛИ Хозрасчетный.СчетДт = &СчетБанка
               |			ИЛИ Хозрасчетный.СчетКт = &СчетКассы
               |			ИЛИ Хозрасчетный.СчетКт = &СчетБанка)
               |
               |СГРУППИРОВАТЬ ПО
               |	Храм_КнигаУчета.Период,
               |	Храм_КнигаУчета.ДокументХозяйственнойОперации.Представление,
    				|	Храм_КнигаУчета.ДокументХозяйственнойОперации,
                 |	Храм_КнигаУчета.СуммаПриход,
               |	Храм_КнигаУчета.СуммаРасход,
               |	ВЫБОР
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПлатежноеПоручение
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.СписаниеСРасчетногоСчета
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПриходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.РасходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ОперацияБух
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Содержание
               |	КОНЕЦ
               |
               |УПОРЯДОЧИТЬ ПО
               |	Период";

Запрос.УстановитьПараметр("НаправлениеПрихода", Справочники.Храм_НаправленияПрихода.Целевое);
Запрос.УстановитьПараметр("СчетКассы", ПланыСчетов.Хозрасчетный.КассаОрганизации);
Запрос.УстановитьПараметр("СчетБанка", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);


Результат1 = Запрос.Выполнить();
Выборка1 = Результат1.Выбрать();
	СтруктураОборотСтроки = Новый Структура;

	Остаток = ОстатокНаНачало;
ОборотПриход = 0;
ОборотРасход = 0;

Пока Выборка1.Следующий() Цикл

СтруктураОборотСтроки.Вставить("Дата", Формат(Выборка1.Период,"ДЛФ=Д"));
СтруктураОборотСтроки.Вставить("Содержание", "" +  Выборка1.ДокументХозяйственнойОперацииПредставление + Символы.ПС + Выборка1.Описание);
СтруктураОборотСтроки.Вставить("Ссылка", Выборка1.ДокументХозяйственнойОперации);
СтруктураОборотСтроки.Вставить("СчетДт", Выборка1.СчетДт);
СтруктураОборотСтроки.Вставить("СчетКт", Выборка1.СчетКт);
СтруктураОборотСтроки.Вставить("Приход", Выборка1.СуммаПриход);
СтруктураОборотСтроки.Вставить("Расход", Выборка1.СуммаРасход);
Остаток = 	Остаток + Выборка1.СуммаПриход - Выборка1.СуммаРасход;
СтруктураОборотСтроки.Вставить("Остаток", Остаток);
ОборотПриход = ОборотПриход + Выборка1.СуммаПриход;
ОборотРасход = ОборотРасход + Выборка1.СуммаРасход;


		        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
				ТабДокумент.Вывести(ОборотСтрокиТаблицы);

КонецЦикла;
		
	
	//	Итого = 0;
	//	ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
	//	Пока ВыборкаСОПВ.Следующий() Цикл
	//			СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
	//			СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
	//			СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
	//			СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
	//	        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
	//			ТабДокумент.Вывести(ОборотСтрокиТаблицы);
	//			Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	//
	//	КонецЦикла;
	//	
		СтруктураОборотИтоги = Новый Структура;
		СтруктураОборотИтоги.Вставить("Остаток", Остаток);
		СтруктураОборотИтоги.Вставить("Приход", ОборотПриход);
		СтруктураОборотИтоги.Вставить("Расход", ОборотРасход);
		
		
		
		
		
		
		СчетЦелевых = ПланыСчетов.Хозрасчетный.НайтиПоКоду("86.02.1");
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(КонецПЕРИОДА(&КонецПЕРИОДА, ДЕНЬ), Счет = &Счет, , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Счет", СчетЦелевых);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("КонецПЕРИОДА", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	ОстатокНаКонец = 0;
	Если  Выборка1.Следующий() Тогда
	    ОстатокНаКонец =   Выборка1.СуммаОстаток;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Остаток86", ОстатокНаКонец);
		
		
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ), , СчетДт = &Счет, , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("Счет", СчетЦелевых);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	Расход86 = 0;      //Счет пассивный поэтому дебетовый оборот это расход
	Если  Выборка1.Следующий() Тогда
	    Расход86 =   Выборка1.СуммаОборот;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Расход86", Расход86);
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ), , , , СчетКт = &Счет, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("Счет", СчетЦелевых);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	Приход86  = 0;     //Счет пассивный поэтому кредитовый оборот это расход

	Если  Выборка1.Следующий() Тогда
	    Приход86 =   Выборка1.СуммаОборот;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Приход86", Приход86);
			
		
		
		
		
		
		ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
		ТабДокумент.Вывести(ОборотИтоги);
				

	
	
	
	//		
	//	// Выведем подвал документа.
		СтруктураПодвала = Новый Структура;
	//	СтруктураПодвала.Вставить("Настоятель",  Выборка.Настоятель);
		СтруктураПодвала.Вставить("ПредседательПриходскогоСовета",    Выборка.ПредседательПриходскогоСовета);
		СтруктураПодвала.Вставить("Казначей",  Выборка.Казначей);
	//	
		Подвал.Параметры.Заполнить(СтруктураПодвала);
	//	
		ТабДокумент.Вывести(Подвал);
	//	
	//	
	//	// Выведем разрыв страницы.
	//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	
	//	
	//	ТабДокумент.Вывести(ОборотШапка);
	//	
	//	ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
	//	
	//	
	//	СтруктураОборотСтроки = Новый Структура;

	//	Итого = 0;
	//	ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
	//	Пока ВыборкаСОПВ.Следующий() Цикл
	//			СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
	//			СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
	//			СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
	//			СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
	//	        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
	//			ТабДокумент.Вывести(ОборотСтрокиТаблицы);
	//			Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	//
	//	КонецЦикла;
	//	
	//	СтруктураОборотИтоги = Новый Структура;
	//	СтруктураОборотИтоги.Вставить("СуммаИтого", Итого);
	//	ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
	//	ТабДокумент.Вывести(ОборотИтоги);
	//			
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		ОбщегоНазначения.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;


КонецФункции

&НаКлиенте
Процедура ПечатьКнигаУчетаЦелевых(Команда)
	ТабДокумент = ПечатьКнигаУчетаЦелевыхНаСервере();
	ТабДокумент.ТолькоПросмотр = Истина;	
	ТабДокумент.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьКнигаУчетаОбщихНаСервере()
МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	
	ОбъектыПечати = новый СписокЗначений;
	ОбъектыПечати.Добавить(Объект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_Храм_ЕпархиальныйОтчет_Храм_КнигаУчетаОбщихПоступлений";
	
	ОбщегоНазначения.УстановитьМинимальныеПоляПечати(ТабДокумент);
	
	Макет = ОбщегоНазначения.МакетПечатнойФормы("Документ.Храм_ЕпархиальныйОтчет.ПФ_MXL_Храм_КнигаУчетаОбщихПоступлений");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Храм_ЕпархиальныйОтчет.Ссылка КАК Ссылка,
	|	Храм_ЕпархиальныйОтчет.Дата КАК Дата,
	|	Храм_ЕпархиальныйОтчет.Организация КАК Организация,
	|	Храм_ЕпархиальныйОтчет.Номер КАК Номер,
	|	""Епархиальный отчет"" КАК СодержаниеОперации,
	|	Храм_ЕпархиальныйОтчет.ПериодОтчета КАК ПериодОтчета,
	|	Храм_ЕпархиальныйОтчет.НачПериода КАК НачПериода,
	|	Храм_ЕпархиальныйОтчет.КонПериода КАК КонПериода,
	|	Храм_ЕпархиальныйОтчет.Настоятель КАК Настоятель,
	|	Храм_ЕпархиальныйОтчет.ПредседательПриходскогоСовета КАК ПредседательПриходскогоСовета,
	|	Храм_ЕпархиальныйОтчет.Казначей КАК Казначей,
	|	Храм_ЕпархиальныйОтчет.ГодОткрытияПрихода КАК ГодОткрытияПрихода,
	|	Храм_ЕпархиальныйОтчет.РекомендованныйПроцентОтчислений КАК РекомендованныйПроцентОтчислений,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаИтого КАК ОстатокСредствНаНачалоПериодаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВКассе КАК ОстатокСредствНаНачалоПериодаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВБанке КАК ОстатокСредствНаНачалоПериодаВБанке,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаИтого КАК ОстатокСредствНаДатуОтчетаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВКассе КАК ОстатокСредствНаДатуОтчетаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВБанке КАК ОстатокСредствНаДатуОтчетаВБанке,
	|	Храм_ЕпархиальныйОтчет.ВзносВПечатнуюФормуИзРасходов КАК ВзносВПечатнуюФормуИзРасходов,
	|	Храм_ЕпархиальныйОтчет.РасчетнаяСуммаВзноса КАК РасчетнаяСуммаВзноса
	|ИЗ
	|	Документ.Храм_ЕпархиальныйОтчет КАК Храм_ЕпархиальныйОтчет
	|ГДЕ
	|	Храм_ЕпархиальныйОтчет.Ссылка В(&МассивОбъектов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		//ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		//СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		//ТелоОтчета    = Макет.ПолучитьОбласть("ТелоОтчета");
		Подвал  = Макет.ПолучитьОбласть("Подвал");
		
		//ОборотШапка   = Макет.ПолучитьОбласть("ОборотШапка");
		ОборотЗаголовокТаблицы   = Макет.ПолучитьОбласть("ОборотЗаголовокТаблицы");
		ОборотСтрокиТаблицы   = Макет.ПолучитьОбласть("ОборотСтрокиТаблицы");
		ОборотИтоги   = Макет.ПолучитьОбласть("ОборотИтоги");

		
		
		
		// Выведем шапку документа.
		СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		
		СтруктураШапки = Новый Структура;
		СтруктураШапки.Вставить("Организация",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм"));
		СтруктураШапки.Вставить("АдресОрганизации",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес"));
		СтруктураШапки.Вставить("НомерДокумента", ОбщегоНазначения.НомерНаПечать(Выборка.Номер, Истина, Ложь));
		СтруктураШапки.Вставить("ДатаДокумента",  Формат(Выборка.Дата, "ДЛФ=ДД"));
		СтруктураШапки.Вставить("Содержание",     Выборка.СодержаниеОперации);
		СтруктураШапки.Вставить("ПериодОтчета",     ?(Выборка.ПериодОтчета = Перечисления.Храм_ПериодыЕпархиальногоОтчета.Год, "" + формат (Выборка.Дата,"ДФ=гггг") + " год", "" + Выборка.ПериодОтчета + " " + формат (Выборка.НачПериода,"ДФ=гггг") + " года"));
		
		
		СтруктураШапки.Вставить("НачПериода", Формат(Выборка.НачПериода,"ДЛФ=ДД" ));
		СтруктураШапки.Вставить("КонПериода", Формат(Выборка.КонПериода,"ДЛФ=ДД" ));
		
		
		
		
				
	СчетОбщих = ПланыСчетов.Хозрасчетный.НайтиПоКоду("86.01");
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Выборка.НачПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	ОстатокНаНачало = 0;
	Если  Выборка1.Следующий() Тогда
	    ОстатокНаНачало =   Выборка1.СуммаОстаток;
		
	КонецЕсли;

		СтруктураШапки.Вставить("ОстатокСредствНаНачалоПериодаИтого", формат(ОстатокНаНачало, "ЧЦ=10; ЧДЦ=2; ЧФ=""Ч руб."""));
		
		
		СтруктураШапки.Вставить("Казначей",  Выборка.Казначей);
		
		
		ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
		ТабДокумент.Вывести(ШапкаДокумента);
		
		
	///////////////////		
		ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
		
Запрос = Новый Запрос;               //Запрос такой хитрый потому что к одному документу надо выбрать одну проводку
Запрос.Текст = "ВЫБРАТЬ
               |	Храм_КнигаУчета.Период КАК Период,
               |	Храм_КнигаУчета.ДокументХозяйственнойОперации.Представление КАК ДокументХозяйственнойОперацииПредставление,
               
               
               |	Храм_КнигаУчета.ДокументХозяйственнойОперации КАК ДокументХозяйственнойОперации,
               
               |	Храм_КнигаУчета.СуммаПриход КАК СуммаПриход,
               |	Храм_КнигаУчета.СуммаРасход КАК СуммаРасход,
               |	ВЫБОР
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПлатежноеПоручение
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.СписаниеСРасчетногоСчета
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПриходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.РасходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ОперацияБух
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Содержание
               |	КОНЕЦ КАК Описание,
               |	МАКСИМУМ(Хозрасчетный.СчетДт) КАК СчетДт,
               |	МАКСИМУМ(Хозрасчетный.СчетКт) КАК СчетКт
               |ИЗ
               |	РегистрСведений.Храм_КнигаУчета КАК Храм_КнигаУчета
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
               |		ПО Храм_КнигаУчета.ДокументХозяйственнойОперации = Хозрасчетный.Регистратор
               |ГДЕ
               |	Храм_КнигаУчета.НаправлениеПрихода = &НаправлениеПрихода
               |	И Храм_КнигаУчета.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ)
               |	И (Хозрасчетный.СчетДт = &СчетКассы
               |			ИЛИ Хозрасчетный.СчетДт = &СчетБанка
               |			ИЛИ Хозрасчетный.СчетКт = &СчетКассы
               |			ИЛИ Хозрасчетный.СчетКт = &СчетБанка)
               |
               |СГРУППИРОВАТЬ ПО
               |	Храм_КнигаУчета.Период,
               |	Храм_КнигаУчета.ДокументХозяйственнойОперации.Представление,
               
               
               |	Храм_КнигаУчета.ДокументХозяйственнойОперации,
               
               |	Храм_КнигаУчета.СуммаПриход,
               |	Храм_КнигаУчета.СуммаРасход,
               |	ВЫБОР
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПлатежноеПоручение
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.СписаниеСРасчетногоСчета
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПриходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.РасходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ОперацияБух
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Содержание
               |	КОНЕЦ
               |
               |УПОРЯДОЧИТЬ ПО
               |	Период";

Запрос.УстановитьПараметр("НаправлениеПрихода", Справочники.Храм_НаправленияПрихода.Нецелевое);
Запрос.УстановитьПараметр("СчетКассы", ПланыСчетов.Хозрасчетный.КассаОрганизации);
Запрос.УстановитьПараметр("СчетБанка", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);


Результат1 = Запрос.Выполнить();
Выборка1 = Результат1.Выбрать();
	СтруктураОборотСтроки = Новый Структура;

	Остаток = ОстатокНаНачало;
ОборотПриход = 0;
ОборотРасход = 0;

Пока Выборка1.Следующий() Цикл

СтруктураОборотСтроки.Вставить("Дата", Формат(Выборка1.Период,"ДЛФ=Д"));
СтруктураОборотСтроки.Вставить("Содержание", "" +  Выборка1.ДокументХозяйственнойОперацииПредставление + Символы.ПС + Выборка1.Описание);
СтруктураОборотСтроки.Вставить("Ссылка", Выборка1.ДокументХозяйственнойОперации);
СтруктураОборотСтроки.Вставить("СчетДт", Выборка1.СчетДт);
СтруктураОборотСтроки.Вставить("СчетКт", Выборка1.СчетКт);
СтруктураОборотСтроки.Вставить("Приход", Выборка1.СуммаПриход);
СтруктураОборотСтроки.Вставить("Расход", Выборка1.СуммаРасход);
Остаток = 	Остаток + Выборка1.СуммаПриход - Выборка1.СуммаРасход;
СтруктураОборотСтроки.Вставить("Остаток", Остаток);
ОборотПриход = ОборотПриход + Выборка1.СуммаПриход;
ОборотРасход = ОборотРасход + Выборка1.СуммаРасход;


		        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
				ТабДокумент.Вывести(ОборотСтрокиТаблицы);

КонецЦикла;
		
	
	//	Итого = 0;
	//	ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
	//	Пока ВыборкаСОПВ.Следующий() Цикл
	//			СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
	//			СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
	//			СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
	//			СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
	//	        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
	//			ТабДокумент.Вывести(ОборотСтрокиТаблицы);
	//			Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	//
	//	КонецЦикла;
	//	
		СтруктураОборотИтоги = Новый Структура;
		СтруктураОборотИтоги.Вставить("Остаток", Остаток);
		СтруктураОборотИтоги.Вставить("Приход", ОборотПриход);
		СтруктураОборотИтоги.Вставить("Расход", ОборотРасход);
		
		
		
		
		
		
		СчетОбщих = ПланыСчетов.Хозрасчетный.НайтиПоКоду("86.01");
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(КонецПЕРИОДА(&КонецПЕРИОДА, ДЕНЬ), Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("КонецПЕРИОДА", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	ОстатокНаКонец = 0;
	Если  Выборка1.Следующий() Тогда
	    ОстатокНаКонец =   Выборка1.СуммаОстаток;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Остаток86", ОстатокНаКонец);
		
		
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ), , СчетДт В ИЕРАРХИИ (&Счет), , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	Расход86 = 0;      //Счет пассивный поэтому дебетовый оборот это расход
	Если  Выборка1.Следующий() Тогда
	    Расход86 =   Выборка1.СуммаОборот;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Расход86", Расход86);
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ), , , , СчетКт В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	Приход86  = 0;     //Счет пассивный поэтому кредитовый оборот это расход

	Если  Выборка1.Следующий() Тогда
	    Приход86 =   Выборка1.СуммаОборот;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Приход86", Приход86);
			
		
		
		
		
		
		ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
		ТабДокумент.Вывести(ОборотИтоги);
				

	
	
	
	//		
	//	// Выведем подвал документа.
		СтруктураПодвала = Новый Структура;
	//	СтруктураПодвала.Вставить("Настоятель",  Выборка.Настоятель);
		СтруктураПодвала.Вставить("ПредседательПриходскогоСовета",    Выборка.ПредседательПриходскогоСовета);
		СтруктураПодвала.Вставить("Казначей",  Выборка.Казначей);
	//	
		Подвал.Параметры.Заполнить(СтруктураПодвала);
	//	
		ТабДокумент.Вывести(Подвал);
	//	
	//	
	//	// Выведем разрыв страницы.
	//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	
	//	
	//	ТабДокумент.Вывести(ОборотШапка);
	//	
	//	ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
	//	
	//	
	//	СтруктураОборотСтроки = Новый Структура;

	//	Итого = 0;
	//	ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
	//	Пока ВыборкаСОПВ.Следующий() Цикл
	//			СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
	//			СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
	//			СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
	//			СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
	//	        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
	//			ТабДокумент.Вывести(ОборотСтрокиТаблицы);
	//			Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	//
	//	КонецЦикла;
	//	
	//	СтруктураОборотИтоги = Новый Структура;
	//	СтруктураОборотИтоги.Вставить("СуммаИтого", Итого);
	//	ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
	//	ТабДокумент.Вывести(ОборотИтоги);
	//			
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		ОбщегоНазначения.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;


КонецФункции

&НаКлиенте
Процедура ПечатьКнигаУчетаОбщих(Команда)
	ТабДокумент = ПечатьКнигаУчетаОбщихНаСервере();
	ТабДокумент.ТолькоПросмотр = Истина;	
	ТабДокумент.Показать();

КонецПроцедуры

&НаСервере
Функция ПечатьКнигаУчетаНеразнесенныхНаСервере()
МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	
	ОбъектыПечати = новый СписокЗначений;
	ОбъектыПечати.Добавить(Объект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_Храм_ЕпархиальныйОтчет_Храм_КнигаУчетаНеразнесенныхОпераций";
	
	ОбщегоНазначения.УстановитьМинимальныеПоляПечати(ТабДокумент);
	
	Макет = ОбщегоНазначения.МакетПечатнойФормы("Документ.Храм_ЕпархиальныйОтчет.ПФ_MXL_Храм_КнигаУчетаНеразнесенныхОпераций");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Храм_ЕпархиальныйОтчет.Ссылка КАК Ссылка,
	|	Храм_ЕпархиальныйОтчет.Дата КАК Дата,
	|	Храм_ЕпархиальныйОтчет.Организация КАК Организация,
	|	Храм_ЕпархиальныйОтчет.Номер КАК Номер,
	|	""Епархиальный отчет"" КАК СодержаниеОперации,
	|	Храм_ЕпархиальныйОтчет.ПериодОтчета КАК ПериодОтчета,
	|	Храм_ЕпархиальныйОтчет.НачПериода КАК НачПериода,
	|	Храм_ЕпархиальныйОтчет.КонПериода КАК КонПериода,
	|	Храм_ЕпархиальныйОтчет.Настоятель КАК Настоятель,
	|	Храм_ЕпархиальныйОтчет.ПредседательПриходскогоСовета КАК ПредседательПриходскогоСовета,
	|	Храм_ЕпархиальныйОтчет.Казначей КАК Казначей,
	|	Храм_ЕпархиальныйОтчет.ГодОткрытияПрихода КАК ГодОткрытияПрихода,
	|	Храм_ЕпархиальныйОтчет.РекомендованныйПроцентОтчислений КАК РекомендованныйПроцентОтчислений,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаИтого КАК ОстатокСредствНаНачалоПериодаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВКассе КАК ОстатокСредствНаНачалоПериодаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаНачалоПериодаВБанке КАК ОстатокСредствНаНачалоПериодаВБанке,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаИтого КАК ОстатокСредствНаДатуОтчетаИтого,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВКассе КАК ОстатокСредствНаДатуОтчетаВКассе,
	|	Храм_ЕпархиальныйОтчет.ОстатокСредствНаДатуОтчетаВБанке КАК ОстатокСредствНаДатуОтчетаВБанке,
	|	Храм_ЕпархиальныйОтчет.ВзносВПечатнуюФормуИзРасходов КАК ВзносВПечатнуюФормуИзРасходов,
	|	Храм_ЕпархиальныйОтчет.РасчетнаяСуммаВзноса КАК РасчетнаяСуммаВзноса
	|ИЗ
	|	Документ.Храм_ЕпархиальныйОтчет КАК Храм_ЕпархиальныйОтчет
	|ГДЕ
	|	Храм_ЕпархиальныйОтчет.Ссылка В(&МассивОбъектов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		//ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		//СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		//ТелоОтчета    = Макет.ПолучитьОбласть("ТелоОтчета");
		Подвал  = Макет.ПолучитьОбласть("Подвал");
		
		//ОборотШапка   = Макет.ПолучитьОбласть("ОборотШапка");
		ОборотЗаголовокТаблицы   = Макет.ПолучитьОбласть("ОборотЗаголовокТаблицы");
		ОборотСтрокиТаблицы   = Макет.ПолучитьОбласть("ОборотСтрокиТаблицы");
		ОборотИтоги   = Макет.ПолучитьОбласть("ОборотИтоги");

		
		
		
		// Выведем шапку документа.
		СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		
		СтруктураШапки = Новый Структура;
		СтруктураШапки.Вставить("Организация",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм"));
		СтруктураШапки.Вставить("АдресОрганизации",   ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес"));
		СтруктураШапки.Вставить("НомерДокумента", ОбщегоНазначения.НомерНаПечать(Выборка.Номер, Истина, Ложь));
		СтруктураШапки.Вставить("ДатаДокумента",  Формат(Выборка.Дата, "ДЛФ=ДД"));
		СтруктураШапки.Вставить("Содержание",     Выборка.СодержаниеОперации);
		СтруктураШапки.Вставить("ПериодОтчета",     ?(Выборка.ПериодОтчета = Перечисления.Храм_ПериодыЕпархиальногоОтчета.Год, "" + формат (Выборка.Дата,"ДФ=гггг") + " год", "" + Выборка.ПериодОтчета + " " + формат (Выборка.НачПериода,"ДФ=гггг") + " года"));
		
		
		СтруктураШапки.Вставить("НачПериода", Формат(Выборка.НачПериода,"ДЛФ=ДД" ));
		СтруктураШапки.Вставить("КонПериода", Формат(Выборка.КонПериода,"ДЛФ=ДД" ));
		
		
		
		
				
	СчетОбщих = ПланыСчетов.Хозрасчетный.НайтиПоКоду("86.01");
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Выборка.НачПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	ОстатокНаНачало = 0;
	Если  Выборка1.Следующий() Тогда
	    ОстатокНаНачало =   Выборка1.СуммаОстаток;
		
	КонецЕсли;

		СтруктураШапки.Вставить("ОстатокСредствНаНачалоПериодаИтого", формат(ОстатокНаНачало, "ЧЦ=10; ЧДЦ=2; ЧФ=""Ч руб."""));
		
		
		СтруктураШапки.Вставить("Казначей",  Выборка.Казначей);
		
		
		ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
		ТабДокумент.Вывести(ШапкаДокумента);
		
		
	///////////////////		
		ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
		
Запрос = Новый Запрос;               //Запрос такой хитрый потому что к одному документу надо выбрать одну проводку
Запрос.Текст = "ВЫБРАТЬ
               |	Хозрасчетный.Регистратор.Дата КАК Период,
               |	Хозрасчетный.Регистратор.Ссылка КАК ДокументХозяйственнойОперацииПредставление,
               |	ВЫБОР
               |		КОГДА Хозрасчетный.Сумма > 0
               |			ТОГДА Хозрасчетный.Сумма
               |		ИНАЧЕ 0
               |	КОНЕЦ КАК СуммаПриход,
               |	ВЫБОР
               |		КОГДА Хозрасчетный.Сумма < 0
               |			ТОГДА Хозрасчетный.Сумма
               |		ИНАЧЕ 0
               |	КОНЕЦ КАК СуммаРасход,
               |	ВЫБОР
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПлатежноеПоручение
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.СписаниеСРасчетногоСчета
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПриходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.РасходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ОперацияБух
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Содержание
               |	КОНЕЦ КАК Описание,
               |	МАКСИМУМ(Хозрасчетный.СчетДт) КАК СчетДт,
               |	МАКСИМУМ(Хозрасчетный.СчетКт) КАК СчетКт
               |ИЗ
               |	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Храм_КнигаУчета КАК Храм_КнигаУчета
               |		ПО (Храм_КнигаУчета.ДокументХозяйственнойОперации = Хозрасчетный.Регистратор)
               |ГДЕ
               |	Хозрасчетный.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ)
               |	И (Хозрасчетный.СчетДт = &СчетКассы
               |			ИЛИ Хозрасчетный.СчетДт = &СчетБанка
               |			ИЛИ Хозрасчетный.СчетКт = &СчетКассы
               |			ИЛИ Хозрасчетный.СчетКт = &СчетБанка)
               |	И Храм_КнигаУчета.ДокументХозяйственнойОперации ЕСТЬ NULL
               |
               |СГРУППИРОВАТЬ ПО
               |	Хозрасчетный.Регистратор.Дата,
               |	Хозрасчетный.Регистратор.Ссылка,
               |	ВЫБОР
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПлатежноеПоручение
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.СписаниеСРасчетногоСчета
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.НазначениеПлатежа
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ПриходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.РасходныйКассовыйОрдер
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Приложение
               |		КОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации ССЫЛКА Документ.ОперацияБух
               |			ТОГДА Храм_КнигаУчета.ДокументХозяйственнойОперации.Содержание
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА Хозрасчетный.Сумма > 0
               |			ТОГДА Хозрасчетный.Сумма
               |		ИНАЧЕ 0
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА Хозрасчетный.Сумма < 0
               |			ТОГДА Хозрасчетный.Сумма
               |		ИНАЧЕ 0
               |	КОНЕЦ
               |
               |УПОРЯДОЧИТЬ ПО
               |	Период";

Запрос.УстановитьПараметр("НаправлениеПрихода", Справочники.Храм_НаправленияПрихода.Нецелевое);
Запрос.УстановитьПараметр("СчетКассы", ПланыСчетов.Хозрасчетный.КассаОрганизации);
Запрос.УстановитьПараметр("СчетБанка", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);


Результат1 = Запрос.Выполнить();
Выборка1 = Результат1.Выбрать();
	СтруктураОборотСтроки = Новый Структура;

	Остаток = ОстатокНаНачало;
ОборотПриход = 0;
ОборотРасход = 0;

Пока Выборка1.Следующий() Цикл

СтруктураОборотСтроки.Вставить("Дата", Формат(Выборка1.Период,"ДЛФ=Д"));
СтруктураОборотСтроки.Вставить("Содержание",Выборка1.ДокументХозяйственнойОперацииПредставление);
СтруктураОборотСтроки.Вставить("СчетДт", Выборка1.СчетДт);
СтруктураОборотСтроки.Вставить("СчетКт", Выборка1.СчетКт);
СтруктураОборотСтроки.Вставить("Приход", Выборка1.СуммаПриход);
СтруктураОборотСтроки.Вставить("Расход", Выборка1.СуммаРасход);
Остаток = 	Остаток + Выборка1.СуммаПриход - Выборка1.СуммаРасход;
СтруктураОборотСтроки.Вставить("Остаток", Остаток);
ОборотПриход = ОборотПриход + Выборка1.СуммаПриход;
ОборотРасход = ОборотРасход + Выборка1.СуммаРасход;


		        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
				ТабДокумент.Вывести(ОборотСтрокиТаблицы);

КонецЦикла;
		
	
	//	Итого = 0;
	//	ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
	//	Пока ВыборкаСОПВ.Следующий() Цикл
	//			СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
	//			СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
	//			СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
	//			СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
	//	        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
	//			ТабДокумент.Вывести(ОборотСтрокиТаблицы);
	//			Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	//
	//	КонецЦикла;
	//	
		СтруктураОборотИтоги = Новый Структура;
		СтруктураОборотИтоги.Вставить("Остаток", Остаток);
		СтруктураОборотИтоги.Вставить("Приход", ОборотПриход);
		СтруктураОборотИтоги.Вставить("Расход", ОборотРасход);
		
		
		
		
		
		
		СчетОбщих = ПланыСчетов.Хозрасчетный.НайтиПоКоду("86.01");
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(КонецПЕРИОДА(&КонецПЕРИОДА, ДЕНЬ), Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("КонецПЕРИОДА", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	ОстатокНаКонец = 0;
	Если  Выборка1.Следующий() Тогда
	    ОстатокНаКонец =   Выборка1.СуммаОстаток;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Остаток86", ОстатокНаКонец);
		
		
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ), , СчетДт В ИЕРАРХИИ (&Счет), , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	Расход86 = 0;      //Счет пассивный поэтому дебетовый оборот это расход
	Если  Выборка1.Следующий() Тогда
	    Расход86 =   Выборка1.СуммаОборот;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Расход86", Расход86);
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонПериода, ДЕНЬ), , , , СчетКт В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("Счет", СчетОбщих);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("НачПериода", Выборка.НачПериода);
	Запрос.УстановитьПараметр("КонПериода", Выборка.КонПериода);
	
	Результат = Запрос.Выполнить();
	Выборка1 = Результат.Выбрать();
	
	Приход86  = 0;     //Счет пассивный поэтому кредитовый оборот это расход

	Если  Выборка1.Следующий() Тогда
	    Приход86 =   Выборка1.СуммаОборот;
		
	КонецЕсли;

		
		СтруктураОборотИтоги.Вставить("Приход86", Приход86);
			
		
		
		
		
		
		ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
		ТабДокумент.Вывести(ОборотИтоги);
				

	
	
	
	//		
	//	// Выведем подвал документа.
		СтруктураПодвала = Новый Структура;
	//	СтруктураПодвала.Вставить("Настоятель",  Выборка.Настоятель);
		СтруктураПодвала.Вставить("ПредседательПриходскогоСовета",    Выборка.ПредседательПриходскогоСовета);
		СтруктураПодвала.Вставить("Казначей",  Выборка.Казначей);
	//	
		Подвал.Параметры.Заполнить(СтруктураПодвала);
	//	
		ТабДокумент.Вывести(Подвал);
	//	
	//	
	//	// Выведем разрыв страницы.
	//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	
	//	
	//	ТабДокумент.Вывести(ОборотШапка);
	//	
	//	ТабДокумент.Вывести(ОборотЗаголовокТаблицы);
	//	
	//	
	//	СтруктураОборотСтроки = Новый Структура;

	//	Итого = 0;
	//	ВыборкаСОПВ= Выборка.СведенияОПеречисленияхВзносов.Выбрать();
	//	Пока ВыборкаСОПВ.Следующий() Цикл
	//			СтруктураОборотСтроки.Вставить("НазваниеДокумента", ВыборкаСОПВ.НазваниеДокумента);
	//			СтруктураОборотСтроки.Вставить("НомерДокумента", ВыборкаСОПВ.НомерДокумента);
	//			СтруктураОборотСтроки.Вставить("ДатаДокумента", формат(ВыборкаСОПВ.ДатаДокумента,"ДЛФ=Д"));
	//			СтруктураОборотСтроки.Вставить("СуммаДокумента", ВыборкаСОПВ.СуммаДокумента);
	//	        ОборотСтрокиТаблицы.Параметры.Заполнить(СтруктураОборотСтроки);
	//			ТабДокумент.Вывести(ОборотСтрокиТаблицы);
	//			Итого = Итого + ВыборкаСОПВ.СуммаДокумента;
	//
	//	КонецЦикла;
	//	
	//	СтруктураОборотИтоги = Новый Структура;
	//	СтруктураОборотИтоги.Вставить("СуммаИтого", Итого);
	//	ОборотИтоги.Параметры.Заполнить(СтруктураОборотИтоги);
	//	ТабДокумент.Вывести(ОборотИтоги);
	//			
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		ОбщегоНазначения.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;
ТабДокумент.ОтображатьЗаголовки = Ложь;
//ТабДокумент.ОтображатьСетку = Ложь;
ТабДокумент.ИспользуемоеИмяФайла = "Неразнесенные операции";
	Возврат ТабДокумент;


КонецФункции

&НаКлиенте
Процедура ПечатьКнигаУчетаНеразнесенных(Команда)
		ТабДокумент = ПечатьКнигаУчетаНеразнесенныхНаСервере();
	ТабДокумент.ТолькоПросмотр = Истина;
	
	ТабДокумент.Показать();

КонецПроцедуры



